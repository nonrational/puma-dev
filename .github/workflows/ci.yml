name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        go-version: [1.13.x, 1.14.x]
        ruby-version: [2.5]

        name: ${{ matrix.os }} / go-${{ matrix.go-version }}
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}

      - uses: actions/checkout@v2

      - run: gem install puma

      - name: 'Setup DNS filesystem in /etc/resolver'
        if: matrix.os == 'macos-latest'
        run: |
          sudo mkdir -p /etc/resolver;
          sudo chmod 0775 /etc/resolver;
          sudo chown :staff /etc/resolver;
      
      - name: 'Setup dummy macOS keychain'
        if: matrix.os == 'macos-latest'
        run: |
          # h/t: https://github.com/bitrise-steplib/steps-certificate-and-profile-installer/blob/2bba6a2304ffd0abfdf440d79b1e4fa261a31517/main.go#L409-L544
          security -v create-keychain -p 'puma-dev-test-keychain-password' ~/Library/puma-dev.keychain-db
          security -v set-keychain-settings -lut 72000 ~/Library/puma-dev.keychain-db
          security    list-keychains | xargs security -v list-keychains -s 
          security -v default-keychain -s ~/Library/puma-dev.keychain-db
          security -v unlock-keychain -p 'puma-dev-test-keychain-password' ~/Library/puma-dev.keychain-db

      - run: go mod download

      - run: go test -v -race -coverprofile=coverage.out -covermode=atomic -timeout=300s ./...
